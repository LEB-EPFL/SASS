/**
 * This is a run without real-time laser control, good for simulating STORM data for use
 * by other programs.
 */

import ch.epfl.leb.sass.simulator.generators.realtime.*; // I am sorry
import ch.epfl.leb.sass.simulator.generators.realtime.fluorophores.dStormProperties;
import java.util.ArrayList;

RNG.setSeed(1);

// *** Initalize generator from the ground up ***
Camera camera = new Camera(256, //res_x
                    256, //res_y
                    100, //acq_speed, 
                    1.6, //readout_noise, 
                    0.06, //dark_current, 
                    0.8, //quantum_efficiency, 
                    2.2,  // ADU_per_electron
                    0,    // EM_gain
                    100,  // baseline, ADU 
                    6.45 * 1e-6, //pixel_size, 
                    1.3, //NA, 
                    600 * 1e-9, //wavelength, 
                    60); //magnification)

// fluorophores: all properties in units per frame
FluorophoreProperties fluo = new dStormProperties(2500, // signal
                    50, // background
                    0.001, //k_bl
                    0.1, // k_triplet
                    0.01, // k_triplet_recovery
                    15, // k_dark
                    0.01, //k_dark_recovery
                    0.01); // k_dark_recovery_constant
// laser
Laser laser = new Laser(0.0, // start
        500.0, // max
        0.0); // min

// generate emitters 
	// create a grid
	ArrayList emitters = FluorophoreGenerator.generateFluorophoresGrid(10,// spacing in px
		  		camera,
				fluo);
				
	// or parse emitters from file
	/*File csv_file = new File("emitter_positions.csv");
	ArrayList emitters = FluorophoreGenerator.parseFluorophoresFromCsv(csv_file, camera, fluo, false);*/

// add a gold bead to the field of view at random location
import ch.epfl.leb.sass.simulator.generators.realtime.obstructors.GoldBeads;
ArrayList obstructors = new ArrayList();
Obstructor beads = new GoldBeads(1, camera, 3000);
obstructors.add(beads);

// assemble the device and generator
Device device = new Device(camera, fluo, laser, emitters, obstructors);
STORMsim generator = new STORMsim(device);

// set laser power
generator.setControlSignal(0.03);

// simulate frames
for (i=0;i<100;i++) {
    if (i%1000==0) {
		System.out.println(i);
	}
	generator.getNextImage();
}

// save and show
generator.saveStack(new File("generated_stack.tif"));
import ij.ImagePlus;
ImagePlus ip = new ImagePlus("Simulation output", generator.getStack());
ip.show();
ip.updateAndRepaintWindow();

//System.exit(0); // uncomment if you want termination immediately



