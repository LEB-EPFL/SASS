/**
 * Copyright (C) 2017-2018 Laboratory of Experimental Biophysics
 * Ecole Polytechnique Federale de Lausanne.
 *
 * Simulates moving fluorophores as in single particle tracking
 * experiments.
 *
 */

import ch.epfl.leb.sass.models.legacy.*;
import ch.epfl.leb.sass.models.obstructors.Obstructor;
import ch.epfl.leb.sass.utils.RNG;

import java.util.ArrayList;
import java.awt.geom.Point2D;

RNG.setSeed(1);

// *** Initalize generator from the ground up ***
Camera camera = new Camera(100, //res_x
                    100, //res_y
                    100, //acq_speed, 
                    1.6, //readout_noise, 
                    0.06, //dark_current, 
                    0.8, //quantum_efficiency,
                    2.2,  // ADU_per_electron
                    0,    // EM_gain
                    100,  // baseline, ADU
                    6.45 * 1e-6, //pixel_size, 
                    1.3, //NA, 
                    600 * 1e-9, //wavelength, 
                    100); //magnification)

// fluorophores: all properties in units per frame
SimpleProperties fluo = new SimpleProperties(2500, // signal
                    50, // background
                    java.lang.Double.POSITIVE_INFINITY, //Ton
					0, // Toff
					java.lang.Double.POSITIVE_INFINITY); // Tbl
// laser
Laser laser = new Laser(0.0, // start
        500.0, // max
        0.0); // min

// generate trajectory
ArrayList trajectory = new ArrayList();
trajectory.add(new Point2D.Double(50.0,50.0));
for (int i=1; i<1000; i++) {
	Point2D.Double last_point = trajectory.get(i-1);
	Point2D.Double new_point = new Point2D.Double(
		last_point.x + RNG.getGaussianGenerator().nextDouble(0,0.25),
		last_point.y + RNG.getGaussianGenerator().nextDouble(0,0.25));
	trajectory.add(new_point);
}

// generate emitter with given trajectory
ArrayList emitters = new ArrayList();
emitters.add( fluo.createMovingFluorophore(camera,50.0,50.0,trajectory));

// alternatively, you may load the trajectory from a csv file
// parse emitters from csv file like below:
// ArrayList emitters = FluorophoreGenerator.parseMovingFluorophoresFromCsv(null, camera, fluo);

// add a gold bead to the field of view at random location
ArrayList obstructors = new ArrayList();
Obstructor beads = new GoldBeads(1, camera, 3000);
obstructors.add(beads);

// assemble the device and generator
Device device = new Device(camera, fluo, laser, emitters, obstructors);
STORMsim generator = new STORMsim(device);

// set laser power
generator.setControlSignal(0.03);

// simulate frames
for (i=0;i<10000;i++) {
    if (i%1000==0) {
		System.out.println(i);
	}
	generator.getNextImage();
}

// save and show; uncomment these lines to save and display stack
//generator.saveStack(new File("generated_stack.tif"));
//import ij.ImagePlus;
//ImagePlus ip = new ImagePlus("Simulation output", generator.getStack());
//ip.show();
//ip.updateAndRepaintWindow();

//System.exit(0); // uncomment if you want termination immediately



