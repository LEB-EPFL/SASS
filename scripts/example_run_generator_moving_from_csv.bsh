/**
 * This is a run without real-time laser control, good for simulating STORM data for use
 * by other programs.
 */

import ch.epfl.leb.sass.simulator.generators.realtime.*; // I am sorry

import java.util.ArrayList;
import java.awt.geom.Point2D;

RNG.setSeed(1);

// *** Initalize generator from the ground up ***
Camera camera = new Camera(300, //res_x
                    300, //res_y
                    100, //acq_speed, 
                    1.6, //readout_noise, 
                    0.06, //dark_current, 
                    0.8, //quantum_efficiency, 
                    6, //gain, 
                    6.45 * 1e-6, //pixel_size, 
                    1.3, //NA, 
                    600 * 1e-9, //wavelength, 
                    100); //magnification)

// fluorophores: all properties in units per frame
import ch.epfl.leb.sass.simulator.generators.realtime.fluorophores.SimpleProperties;
SimpleProperties fluo = new SimpleProperties(500, // signal
                    50, // background
                    java.lang.Double.POSITIVE_INFINITY, //Ton
					0, // Toff
					java.lang.Double.POSITIVE_INFINITY); // Tbl
// laser
Laser laser = new Laser(0.0, // start
        500.0, // max
        0.0); // min

// parse emitters from csv file
ArrayList emitters = FluorophoreGenerator.parseMovingFluorophoresFromCsv(null, camera, fluo);

// add a gold bead to the field of view at random location
import ch.epfl.leb.sass.simulator.generators.realtime.obstructors.GoldBeads;
ArrayList obstructors = new ArrayList();
Obstructor beads = new GoldBeads(1, camera, 3000);
obstructors.add(beads);

// assemble the device and generator
Device device = new Device(camera, fluo, laser, emitters, obstructors);
STORMsim generator = new STORMsim(device);

// set laser power
generator.setControlSignal(0.03);

// simulate frames
for (i=0;i<500;i++) {
    if (i%1000==0) {
		System.out.println(i);
	}
	generator.getNextImage();
}

// save and show
generator.saveStack(new File("generated_stack.tif"));
import ij.ImagePlus;
ImagePlus ip = new ImagePlus("Simulation output", generator.getStack());
ip.show();
ip.updateAndRepaintWindow();

//System.exit(0); // uncomment if you want termination immediately



