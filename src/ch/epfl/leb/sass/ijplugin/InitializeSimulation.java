/* 
 * Copyright (C) 2017 Laboratory of Experimental Biophysics
 * Ecole Polytechnique Federale de Lausanne
 * 
 * Author: Marcel Stefko
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package ch.epfl.leb.sass.ijplugin;


import ch.epfl.leb.sass.simulator.generators.realtime.SimEngine;
import ch.epfl.leb.sass.simulator.generators.realtime.Microscope;
import ch.epfl.leb.alica.analyzers.AnalyzerFactory;
import ch.epfl.leb.alica.analyzers.AnalyzerSetupPanel;
import ch.epfl.leb.alica.controllers.ControllerFactory;
import ij.IJ;
import java.awt.GridLayout;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.ButtonModel;
import java.awt.CardLayout;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Frame for basic setup of a simulation.
 * @author Marcel Stefko
 */
public class InitializeSimulation extends java.awt.Dialog {

    Model model = new Model();
    File emittersCsvFile = new File("");
    File backgroundTifFile = new File("");
    GUI main;
    private final AnalyzerFactory analyzer_factory;
    private final ControllerFactory controller_factory;
    
    /**
     * Assemble the frame and display it
     * @param parent
     * @param modal should the window be persistent
     * @param main GUI to notify
     */
    public InitializeSimulation(java.awt.Frame parent, boolean modal, GUI main) {
        super(parent, modal);
        this.main = main;
        this.analyzer_factory = new AnalyzerFactory();
        this.controller_factory = new ControllerFactory();
        initComponents();
        
        // Populate the dropdown menus of analyzer, controller and laser
        cb_analyzer_setup.removeAllItems();
        for (String key: analyzer_factory.getProductNameList()) {
            cb_analyzer_setup.addItem(key);
        }
        cb_analyzer_setup.setSelectedItem(analyzer_factory.getSelectedProductName());
        
        cb_controller_setup.removeAllItems();
        for (String key: controller_factory.getProductNameList()) {
            cb_controller_setup.addItem(key);
        }
        cb_controller_setup.setSelectedItem(controller_factory.getSelectedProductName());
        

        // update the setup panels
        updateAnalyzerSetupPanel();
        updateControllerSetupPanel();
    }
    
    private void updateAnalyzerSetupPanel() {
        analyzer_panel.removeAll();
        javax.swing.JPanel panel = analyzer_factory.getSelectedSetupPanel();
        analyzer_panel.add(panel);
        panel.setBounds(5,5,200,150);
        panel.revalidate();
        panel.repaint();
        analyzer_panel.validate();
        analyzer_panel.repaint();
    }
    
    private void updateControllerSetupPanel() {
        controller_panel.removeAll();
        javax.swing.JPanel panel = controller_factory.getSelectedSetupPanel();
        controller_panel.add(panel);
        panel.setBounds(5,5,200,150);
        panel.revalidate();
        panel.repaint();
        controller_panel.validate();
        controller_panel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emittersButtons = new javax.swing.ButtonGroup();
        backgroundButtons = new javax.swing.ButtonGroup();
        panel6 = new java.awt.Panel();
        jLabel1 = new javax.swing.JLabel();
        cb_analyzer_setup = new javax.swing.JComboBox();
        analyzer_panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cb_controller_setup = new javax.swing.JComboBox();
        controller_panel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        e_controller_tickrate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        e_max_controller_output = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cameraSizeX = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cameraSizeY = new javax.swing.JTextField();
        cameraReadoutNoise = new javax.swing.JTextField();
        cameraDarkCurrent = new javax.swing.JTextField();
        cameraQuantumEfficiency = new javax.swing.JTextField();
        cameraAduPerElectron = new javax.swing.JTextField();
        cameraEmGain = new javax.swing.JTextField();
        cameraBaseline = new javax.swing.JTextField();
        cameraPixelSize = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        objectiveNa = new javax.swing.JTextField();
        objectiveMag = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        laserMinPower = new javax.swing.JTextField();
        laserMaxPower = new javax.swing.JTextField();
        laserInitPower = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        stageZ = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        emittersRandomButton = new javax.swing.JRadioButton();
        jLabel45 = new javax.swing.JLabel();
        emittersRandomNumber = new javax.swing.JTextField();
        emittersCsvButton = new javax.swing.JRadioButton();
        emittersChooseFile = new javax.swing.JButton();
        emittersGridButton = new javax.swing.JRadioButton();
        emittersGridSpacing = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        emitters3DCheckBox = new javax.swing.JCheckBox();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        emitters3DMinZ = new javax.swing.JTextField();
        emitters3DMaxZ = new javax.swing.JTextField();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        fiducialsNumber = new javax.swing.JTextField();
        fiducialsSignal = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        backgroundUniformButton = new javax.swing.JRadioButton();
        backgroundTifButton = new javax.swing.JRadioButton();
        jLabel52 = new javax.swing.JLabel();
        backgroundUniformSignal = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        backgroundChooseFile = new javax.swing.JButton();
        backgroundRandomButton = new javax.swing.JRadioButton();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        backgroundRandomFeatureSize = new javax.swing.JTextField();
        backgroundRandomMinValue = new javax.swing.JTextField();
        backgroundRandomMaxValue = new javax.swing.JTextField();
        backgroundRandomSeed = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        initializeSimulation = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        psfParentPanel = new javax.swing.JPanel();
        psfComboBox = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        psfCardPanel = new javax.swing.JPanel();
        psfGaussian2DCard = new javax.swing.JPanel();
        psfGaussian2DLabel = new javax.swing.JLabel();
        psfGaussian3DCard = new javax.swing.JPanel();
        psfGaussian3DLabel = new javax.swing.JLabel();
        psfGibsonLanniCard = new javax.swing.JScrollPane();
        psfGibsonLanniPanel = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        glNumBasis = new javax.swing.JTextField();
        glNumSamples = new javax.swing.JTextField();
        glOversampling = new javax.swing.JTextField();
        glSizeX = new javax.swing.JTextField();
        glSizeY = new javax.swing.JTextField();
        glNs = new javax.swing.JTextField();
        glNg0 = new javax.swing.JTextField();
        glNg = new javax.swing.JTextField();
        glNi0 = new javax.swing.JTextField();
        glNi = new javax.swing.JTextField();
        glTi0 = new javax.swing.JTextField();
        glTg0 = new javax.swing.JTextField();
        glTg = new javax.swing.JTextField();
        glResPsf = new javax.swing.JTextField();
        glResPsfAxial = new javax.swing.JTextField();
        glSolver = new javax.swing.JTextField();
        glMaxRadius = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        FluorophoreParentPanel = new javax.swing.JPanel();
        fluorophoreCardPanel = new javax.swing.JPanel();
        simpleFluorophoreCard = new javax.swing.JScrollPane();
        SimpleFluorophorePanel = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        fluorophoreSignal = new javax.swing.JTextField();
        fluorophoreWavelength = new javax.swing.JTextField();
        fluorophoreTOn = new javax.swing.JTextField();
        fluorophoreTOff = new javax.swing.JTextField();
        fluorophoreTBl = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        fluorophoreComboBox = new javax.swing.JComboBox<>();
        fluorophoreSeparator = new javax.swing.JSeparator();

        setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel1.setText("Analyzer:");

        cb_analyzer_setup.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cb_analyzer_setupPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        analyzer_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        analyzer_panel.setPreferredSize(new java.awt.Dimension(210, 160));

        javax.swing.GroupLayout analyzer_panelLayout = new javax.swing.GroupLayout(analyzer_panel);
        analyzer_panel.setLayout(analyzer_panelLayout);
        analyzer_panelLayout.setHorizontalGroup(
            analyzer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        analyzer_panelLayout.setVerticalGroup(
            analyzer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel6Layout = new javax.swing.GroupLayout(panel6);
        panel6.setLayout(panel6Layout);
        panel6Layout.setHorizontalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cb_analyzer_setup, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel6Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(analyzer_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panel6Layout.setVerticalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cb_analyzer_setup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(analyzer_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.setText("Controller:");

        cb_controller_setup.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cb_controller_setupPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        controller_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        controller_panel.setPreferredSize(new java.awt.Dimension(210, 160));

        javax.swing.GroupLayout controller_panelLayout = new javax.swing.GroupLayout(controller_panel);
        controller_panel.setLayout(controller_panelLayout);
        controller_panelLayout.setHorizontalGroup(
            controller_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );
        controller_panelLayout.setVerticalGroup(
            controller_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );

        jLabel3.setText("Tick rate [frames]:");

        e_controller_tickrate.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        e_controller_tickrate.setText("40");

        jLabel4.setText("Max output:");

        e_max_controller_output.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        e_max_controller_output.setText("50");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addComponent(controller_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(cb_controller_setup, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(e_max_controller_output, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                    .addComponent(e_controller_tickrate))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cb_controller_setup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(e_controller_tickrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(e_max_controller_output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(controller_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Camera"));

        jLabel5.setText("Size, x");

        cameraSizeX.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cameraSizeX.setText("32");

        jLabel6.setText("Size, y");

        jLabel7.setText("Readout noise");

        jLabel8.setText("Dark current");

        jLabel9.setText("Quantum efficiency");

        jLabel10.setText("Sensitivity");

        jLabel11.setText("EM gain");

        jLabel12.setText("Baseline");

        jLabel13.setText("Pixel size");

        cameraSizeY.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cameraSizeY.setText("32");

        cameraReadoutNoise.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cameraReadoutNoise.setText("1.6");

        cameraDarkCurrent.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cameraDarkCurrent.setText("0.06");

        cameraQuantumEfficiency.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cameraQuantumEfficiency.setText("0.8");

        cameraAduPerElectron.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cameraAduPerElectron.setText("2.2");

        cameraEmGain.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cameraEmGain.setText("0");

        cameraBaseline.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cameraBaseline.setText("100");

        cameraPixelSize.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cameraPixelSize.setText("6.5");

        jLabel14.setText("pixels");

        jLabel15.setText("pixels");

        jLabel16.setText("electrons");

        jLabel17.setText("electrons / frame");

        jLabel18.setText("--");

        jLabel19.setText("ADU / electron");

        jLabel20.setText("--");

        jLabel21.setText("ADU");

        jLabel22.setText("µm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cameraSizeX, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cameraSizeY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cameraReadoutNoise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cameraDarkCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cameraQuantumEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cameraAduPerElectron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cameraEmGain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cameraBaseline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cameraPixelSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cameraAduPerElectron, cameraBaseline, cameraDarkCurrent, cameraEmGain, cameraPixelSize, cameraQuantumEfficiency, cameraReadoutNoise, cameraSizeX, cameraSizeY});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cameraSizeX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cameraSizeY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cameraReadoutNoise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cameraDarkCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cameraQuantumEfficiency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cameraAduPerElectron, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cameraEmGain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cameraBaseline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cameraPixelSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Objective"));

        jLabel23.setText("Numerical aperture");

        jLabel24.setText("Magnification");

        objectiveNa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        objectiveNa.setText("1.3");

        objectiveMag.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        objectiveMag.setText("60");

        jLabel25.setText("--");

        jLabel26.setText("--");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(objectiveMag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objectiveNa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {objectiveMag, objectiveNa});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(objectiveNa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(objectiveMag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Laser"));

        jLabel27.setText("Minimum power");

        jLabel28.setText("Maximum power");

        jLabel29.setText("Initial power");

        laserMinPower.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        laserMinPower.setText("0.0");

        laserMaxPower.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        laserMaxPower.setText("100.0");

        laserInitPower.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        laserInitPower.setText("1.0");

        jLabel30.setText("mW");

        jLabel31.setText("mW");

        jLabel32.setText("mW");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(laserInitPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(laserMinPower)
                            .addComponent(laserMaxPower, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {laserInitPower, laserMaxPower, laserMinPower});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(laserMinPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(laserMaxPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(laserInitPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Stage"));

        jLabel43.setText("z-position");

        stageZ.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        stageZ.setText("0.0");

        jLabel44.setText("µm");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stageZ, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel44)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(stageZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Emitters"));

        emittersButtons.add(emittersRandomButton);
        emittersRandomButton.setSelected(true);
        emittersRandomButton.setText("Random");
        emittersRandomButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                emittersRandomButtonStateChanged(evt);
            }
        });

        jLabel45.setText("Number");

        emittersRandomNumber.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        emittersRandomNumber.setText("100");

        emittersButtons.add(emittersCsvButton);
        emittersCsvButton.setText("From .csv file");
        emittersCsvButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                emittersCsvButtonStateChanged(evt);
            }
        });

        emittersChooseFile.setText("Choose file...");
        emittersChooseFile.setEnabled(false);
        emittersChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emittersChooseFileActionPerformed(evt);
            }
        });

        emittersButtons.add(emittersGridButton);
        emittersGridButton.setText("Grid");
        emittersGridButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                emittersGridButtonStateChanged(evt);
            }
        });

        emittersGridSpacing.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        emittersGridSpacing.setText("5");
        emittersGridSpacing.setEnabled(false);

        jLabel46.setText("Spacing");

        jLabel47.setText("pixels");

        emitters3DCheckBox.setText("3D");
        emitters3DCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                emitters3DCheckBoxItemStateChanged(evt);
            }
        });

        jLabel96.setText("Min. z-position");

        jLabel97.setText("Max. z-position");

        emitters3DMinZ.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        emitters3DMinZ.setText("0");
        emitters3DMinZ.setEnabled(false);

        emitters3DMaxZ.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        emitters3DMaxZ.setText("2");
        emitters3DMaxZ.setEnabled(false);

        jLabel98.setText("µm");

        jLabel99.setText("µm");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(emittersRandomButton)
                                    .addComponent(emittersGridButton)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                                        .addComponent(jLabel45)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(emittersRandomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                                        .addComponent(jLabel46)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(emittersGridSpacing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel47))
                                            .addComponent(emittersChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(emitters3DCheckBox)
                                    .addComponent(emittersCsvButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel97)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel96)
                                .addGap(13, 13, 13)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(emitters3DMinZ, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(emitters3DMaxZ))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel98)
                            .addComponent(jLabel99, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {emittersGridSpacing, emittersRandomNumber});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(emittersRandomButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(emittersRandomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emittersGridButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emittersGridSpacing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emittersCsvButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emittersChooseFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emitters3DCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel96)
                    .addComponent(emitters3DMinZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel98))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel97)
                    .addComponent(emitters3DMaxZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel99))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Fiducials"));

        jLabel48.setText("Number");

        jLabel49.setText("Signal");

        fiducialsNumber.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fiducialsNumber.setText("1");

        fiducialsSignal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fiducialsSignal.setText("1000");

        jLabel50.setText("--");

        jLabel51.setText("photons / frame");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addComponent(jLabel49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fiducialsSignal, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(fiducialsNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel50)
                    .addComponent(jLabel51))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(fiducialsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(fiducialsSignal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Background"));

        backgroundButtons.add(backgroundUniformButton);
        backgroundUniformButton.setSelected(true);
        backgroundUniformButton.setText("Uniform");
        backgroundUniformButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                backgroundUniformButtonStateChanged(evt);
            }
        });

        backgroundButtons.add(backgroundTifButton);
        backgroundTifButton.setText("From .tif file");
        backgroundTifButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                backgroundTifButtonStateChanged(evt);
            }
        });

        jLabel52.setText("Signal");

        backgroundUniformSignal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        backgroundUniformSignal.setText("10");

        jLabel53.setText("photons");

        backgroundChooseFile.setText("Choose file...");
        backgroundChooseFile.setEnabled(false);
        backgroundChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backgroundChooseFileActionPerformed(evt);
            }
        });

        backgroundButtons.add(backgroundRandomButton);
        backgroundRandomButton.setText("Random");
        backgroundRandomButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                backgroundRandomButtonStateChanged(evt);
            }
        });

        jLabel54.setText("Feature size");

        jLabel55.setText("Min.");

        jLabel56.setText("Max.");

        jLabel57.setText("Seed");

        backgroundRandomFeatureSize.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        backgroundRandomFeatureSize.setText("50");
        backgroundRandomFeatureSize.setEnabled(false);

        backgroundRandomMinValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        backgroundRandomMinValue.setText("10");
        backgroundRandomMinValue.setEnabled(false);

        backgroundRandomMaxValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        backgroundRandomMaxValue.setText("50");
        backgroundRandomMaxValue.setEnabled(false);

        backgroundRandomSeed.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        backgroundRandomSeed.setText("0");
        backgroundRandomSeed.setEnabled(false);

        jLabel58.setText("pixels");

        jLabel59.setText("photons");

        jLabel60.setText("photons");

        jLabel61.setText("--");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backgroundUniformButton)
                    .addComponent(backgroundRandomButton)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backgroundChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel52)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(backgroundUniformSignal, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel55)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(backgroundRandomMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel56)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(backgroundRandomMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel57)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(backgroundRandomSeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(jLabel54)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(backgroundRandomFeatureSize, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel58)
                                    .addComponent(jLabel59)
                                    .addComponent(jLabel60)
                                    .addComponent(jLabel61)
                                    .addComponent(jLabel53, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addComponent(backgroundTifButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {backgroundRandomFeatureSize, backgroundRandomMaxValue, backgroundRandomMinValue, backgroundRandomSeed, backgroundUniformSignal});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backgroundUniformButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(backgroundUniformSignal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel53))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backgroundRandomButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(backgroundRandomFeatureSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(backgroundRandomMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel59))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(backgroundRandomMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel57)
                    .addComponent(backgroundRandomSeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel61))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backgroundTifButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backgroundChooseFile)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        initializeSimulation.setText("Initialize");
        initializeSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initializeSimulationActionPerformed(evt);
            }
        });

        saveButton.setText("Save...");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        openButton.setText("Open...");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        psfParentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("PSF"));

        psfComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gaussian 2D", "Gaussian 3D", "Gibson-Lanni" }));
        psfComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                psfComboBoxItemStateChanged(evt);
            }
        });

        psfCardPanel.setLayout(new java.awt.CardLayout());

        psfGaussian2DCard.setName("Gaussian 2D"); // NOI18N

        psfGaussian2DLabel.setText("Nothing to configure.");

        javax.swing.GroupLayout psfGaussian2DCardLayout = new javax.swing.GroupLayout(psfGaussian2DCard);
        psfGaussian2DCard.setLayout(psfGaussian2DCardLayout);
        psfGaussian2DCardLayout.setHorizontalGroup(
            psfGaussian2DCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(psfGaussian2DCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(psfGaussian2DLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(127, Short.MAX_VALUE))
        );
        psfGaussian2DCardLayout.setVerticalGroup(
            psfGaussian2DCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(psfGaussian2DCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(psfGaussian2DLabel)
                .addContainerGap(334, Short.MAX_VALUE))
        );

        psfCardPanel.add(psfGaussian2DCard, "Gaussian 2D");
        psfGaussian2DCard.getAccessibleContext().setAccessibleName("");
        psfGaussian2DCard.getAccessibleContext().setAccessibleDescription("");

        psfGaussian3DCard.setName("Gaussian 3D"); // NOI18N

        psfGaussian3DLabel.setText("Nothing to configure.");

        javax.swing.GroupLayout psfGaussian3DCardLayout = new javax.swing.GroupLayout(psfGaussian3DCard);
        psfGaussian3DCard.setLayout(psfGaussian3DCardLayout);
        psfGaussian3DCardLayout.setHorizontalGroup(
            psfGaussian3DCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(psfGaussian3DCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(psfGaussian3DLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(158, Short.MAX_VALUE))
        );
        psfGaussian3DCardLayout.setVerticalGroup(
            psfGaussian3DCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(psfGaussian3DCardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(psfGaussian3DLabel)
                .addContainerGap(334, Short.MAX_VALUE))
        );

        psfCardPanel.add(psfGaussian3DCard, "Gaussian 3D");

        psfGibsonLanniCard.setName("Gibson-Lanni"); // NOI18N

        jLabel62.setText("Number of Bessels");

        jLabel63.setText("Number of samples");

        jLabel64.setText("Oversampling");

        jLabel65.setText("Grid size, x");

        jLabel66.setText("Grid size, y");

        jLabel67.setText("Sample refractive index (n)");

        jLabel68.setText("Coverslip, design n");

        jLabel69.setText("Coverslip, actual n");

        jLabel70.setText("Immersion medium, design n");

        jLabel71.setText("Immersion medium, actual n");

        jLabel72.setText("Immersion medium, design thickness");

        jLabel73.setText("Coverslip, design thickness");

        jLabel74.setText("Coverslip, actual thickness");

        jLabel75.setText("Resolution");

        jLabel76.setText("Axial resolution");

        jLabel77.setText("Solver");

        jLabel78.setText("Maximum radius");

        glNumBasis.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glNumBasis.setText("100");

        glNumSamples.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glNumSamples.setText("1000");

        glOversampling.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glOversampling.setText("2");

        glSizeX.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glSizeX.setText("1024");

        glSizeY.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glSizeY.setText("1024");

        glNs.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glNs.setText("1.33");

        glNg0.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glNg0.setText("1.5");

        glNg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glNg.setText("1.5");

        glNi0.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glNi0.setText("1.5");

        glNi.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glNi.setText("1.5");

        glTi0.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glTi0.setText("150");

        glTg0.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glTg0.setText("170");

        glTg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glTg.setText("170");

        glResPsf.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glResPsf.setText("0.0215");

        glResPsfAxial.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glResPsfAxial.setText("0.005");

        glSolver.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glSolver.setText("svd");

        glMaxRadius.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        glMaxRadius.setText("15");

        jLabel79.setText("--");

        jLabel80.setText("--");

        jLabel81.setText("--");

        jLabel82.setText("pixels");

        jLabel83.setText("pixels");

        jLabel84.setText("--");

        jLabel85.setText("--");

        jLabel86.setText("--");

        jLabel87.setText("--");

        jLabel88.setText("--");

        jLabel89.setText("µm");

        jLabel90.setText("µm");

        jLabel91.setText("µm");

        jLabel92.setText("µm");

        jLabel93.setText("µm");

        jLabel94.setText("svd or qrd");

        jLabel95.setText("pixels");

        javax.swing.GroupLayout psfGibsonLanniPanelLayout = new javax.swing.GroupLayout(psfGibsonLanniPanel);
        psfGibsonLanniPanel.setLayout(psfGibsonLanniPanelLayout);
        psfGibsonLanniPanelLayout.setHorizontalGroup(
            psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glNumBasis, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel63)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glNumSamples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel64)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glOversampling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel65)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glSizeX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel66)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glSizeY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glNs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel68)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glNg0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel78)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glMaxRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel77)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glSolver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel76)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glResPsfAxial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel75)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glResPsf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel74)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glTg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel73)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glTg0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel69)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glNg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel70)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glNi0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel71)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glNi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                        .addComponent(jLabel72)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(glTi0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel79)
                    .addComponent(jLabel80)
                    .addComponent(jLabel81)
                    .addComponent(jLabel82)
                    .addComponent(jLabel83)
                    .addComponent(jLabel84)
                    .addComponent(jLabel85)
                    .addComponent(jLabel86)
                    .addComponent(jLabel87)
                    .addComponent(jLabel88)
                    .addComponent(jLabel89)
                    .addComponent(jLabel90)
                    .addComponent(jLabel91)
                    .addComponent(jLabel92)
                    .addComponent(jLabel93)
                    .addComponent(jLabel94)
                    .addComponent(jLabel95))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        psfGibsonLanniPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {glMaxRadius, glNg, glNg0, glNi, glNi0, glNs, glNumBasis, glNumSamples, glOversampling, glResPsf, glResPsfAxial, glSizeX, glSizeY, glSolver, glTg, glTg0, glTi0});

        psfGibsonLanniPanelLayout.setVerticalGroup(
            psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(psfGibsonLanniPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(glNumBasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel79))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(glNumSamples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel80))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(glOversampling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel81))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(glSizeX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel82))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(glSizeY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel83))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(glNs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel84))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(glNg0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel85))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(glNg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel86))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel70)
                    .addComponent(glNi0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel87))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(glNi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel88))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(glTi0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel89))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(glTg0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel90))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74)
                    .addComponent(glTg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel91))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(glResPsf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel92))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel76)
                    .addComponent(glResPsfAxial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel93))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(glSolver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel94))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(psfGibsonLanniPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78)
                    .addComponent(glMaxRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel95))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        psfGibsonLanniCard.setViewportView(psfGibsonLanniPanel);

        psfCardPanel.add(psfGibsonLanniCard, "Gibson-Lanni");

        javax.swing.GroupLayout psfParentPanelLayout = new javax.swing.GroupLayout(psfParentPanel);
        psfParentPanel.setLayout(psfParentPanelLayout);
        psfParentPanelLayout.setHorizontalGroup(
            psfParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, psfParentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(psfParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(psfCardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(psfComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        psfParentPanelLayout.setVerticalGroup(
            psfParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(psfParentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(psfComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(psfCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        FluorophoreParentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Fluorophores"));

        fluorophoreCardPanel.setBorder(null);
        fluorophoreCardPanel.setLayout(new java.awt.CardLayout());

        simpleFluorophoreCard.setBorder(null);
        simpleFluorophoreCard.setName("Simple"); // NOI18N

        SimpleFluorophorePanel.setBorder(null);

        jLabel33.setText("Signal");

        jLabel34.setText("Wavelength");

        jLabel35.setText("tOn");

        jLabel36.setText("tOff");

        jLabel37.setText("tBleached");

        fluorophoreSignal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fluorophoreSignal.setText("1500");

        fluorophoreWavelength.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fluorophoreWavelength.setText("0.68");

        fluorophoreTOn.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fluorophoreTOn.setText("3");

        fluorophoreTOff.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fluorophoreTOff.setText("100");
        fluorophoreTOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fluorophoreTOffActionPerformed(evt);
            }
        });

        fluorophoreTBl.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        fluorophoreTBl.setText("5000");

        jLabel38.setText("photons / frame");

        jLabel39.setText("µm");

        jLabel40.setText("frames");

        jLabel41.setText("frames");

        jLabel42.setText("frames");

        javax.swing.GroupLayout SimpleFluorophorePanelLayout = new javax.swing.GroupLayout(SimpleFluorophorePanel);
        SimpleFluorophorePanel.setLayout(SimpleFluorophorePanelLayout);
        SimpleFluorophorePanelLayout.setHorizontalGroup(
            SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SimpleFluorophorePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fluorophoreWavelength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fluorophoreTOn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fluorophoreTOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fluorophoreTBl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fluorophoreSignal, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40)
                    .addComponent(jLabel41)
                    .addComponent(jLabel42))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SimpleFluorophorePanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fluorophoreSignal, fluorophoreTBl, fluorophoreTOff, fluorophoreTOn, fluorophoreWavelength});

        SimpleFluorophorePanelLayout.setVerticalGroup(
            SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SimpleFluorophorePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(fluorophoreSignal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(fluorophoreWavelength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(fluorophoreTOn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(fluorophoreTOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SimpleFluorophorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(fluorophoreTBl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        simpleFluorophoreCard.setViewportView(SimpleFluorophorePanel);
        SimpleFluorophorePanel.getAccessibleContext().setAccessibleParent(FluorophoreParentPanel);

        fluorophoreCardPanel.add(simpleFluorophoreCard, "Simple");

        fluorophoreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Simple" }));
        fluorophoreComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fluorophoreComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout FluorophoreParentPanelLayout = new javax.swing.GroupLayout(FluorophoreParentPanel);
        FluorophoreParentPanel.setLayout(FluorophoreParentPanelLayout);
        FluorophoreParentPanelLayout.setHorizontalGroup(
            FluorophoreParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FluorophoreParentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FluorophoreParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fluorophoreSeparator, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fluorophoreComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fluorophoreCardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE))
                .addContainerGap())
        );
        FluorophoreParentPanelLayout.setVerticalGroup(
            FluorophoreParentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FluorophoreParentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fluorophoreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fluorophoreSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fluorophoreCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(psfParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(FluorophoreParentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(initializeSimulation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton)
                .addGap(529, 529, 529))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {initializeSimulation, openButton, saveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(FluorophoreParentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(psfParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initializeSimulation)
                    .addComponent(saveButton)
                    .addComponent(openButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void cb_analyzer_setupPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cb_analyzer_setupPopupMenuWillBecomeInvisible
        analyzer_factory.selectProduct((String) cb_analyzer_setup.getSelectedItem());
        updateAnalyzerSetupPanel();
    }//GEN-LAST:event_cb_analyzer_setupPopupMenuWillBecomeInvisible

    private void cb_controller_setupPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cb_controller_setupPopupMenuWillBecomeInvisible
        controller_factory.selectProduct((String) cb_controller_setup.getSelectedItem());
        updateControllerSetupPanel();
    }//GEN-LAST:event_cb_controller_setupPopupMenuWillBecomeInvisible

    private void fluorophoreTOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fluorophoreTOffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fluorophoreTOffActionPerformed

    private void backgroundChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backgroundChooseFileActionPerformed
        JFileChooser fc = new JFileChooser();
        int returnVal;
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        //set a default filename 
        fc.setSelectedFile(new File("background.tif"));
        //Set an extension filter
        fc.setFileFilter(new FileNameExtensionFilter("Tif file","tif"));
        returnVal = fc.showOpenDialog(null);
        if  (returnVal != JFileChooser.APPROVE_OPTION) {
            return;
        }
        backgroundTifFile = fc.getSelectedFile();
        // background_file_label.setText(backgroundTifFile.getName());
    }//GEN-LAST:event_backgroundChooseFileActionPerformed

    private void emittersChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emittersChooseFileActionPerformed
        JFileChooser fc = new JFileChooser();
        int returnVal;
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        //set a default filename
        fc.setSelectedFile(new File("emitters.csv"));
        //Set an extension filter
        fc.setFileFilter(new FileNameExtensionFilter("CSV file","csv"));
        returnVal = fc.showOpenDialog(null);
        if  (returnVal != JFileChooser.APPROVE_OPTION) {
            return;
        }
        emittersCsvFile = fc.getSelectedFile();
        //emitter_file_label.setText(emittersCsvFile.getName());
    }//GEN-LAST:event_emittersChooseFileActionPerformed

    private void updateModel() {
        try {
            model.setCameraNX(Integer.parseInt(cameraSizeX.getText()));
            model.setCameraNY(Integer.parseInt(cameraSizeY.getText()));
            model.setCameraReadoutNoise(Double.parseDouble(cameraReadoutNoise.getText()));
            model.setCameraDarkCurrent(Double.parseDouble(cameraDarkCurrent.getText()));
            model.setCameraQuantumEfficiency(Double.parseDouble(cameraQuantumEfficiency.getText()));
            model.setCameraAduPerElectron(Double.parseDouble(cameraAduPerElectron.getText()));
            model.setCameraEmGain(Integer.parseInt(cameraEmGain.getText()));
            model.setCameraBaseline(Integer.parseInt(cameraBaseline.getText()));
            model.setCameraPixelSize(Double.parseDouble(cameraPixelSize.getText()));
            
            model.setObjectiveNa(Double.parseDouble(objectiveNa.getText()));
            model.setObjectiveMag(Double.parseDouble(objectiveMag.getText()));
            
            model.setStageX(0);
            model.setStageY(0);
            model.setStageZ(Double.parseDouble(stageZ.getText()));

            model.setFluorophoreCurrentSelection(String.valueOf(fluorophoreComboBox.getSelectedItem()));
            model.setFluorophoreSimpleText(simpleFluorophoreCard.getName());
            model.setFluorophoreSignal(Double.parseDouble(fluorophoreSignal.getText()));
            model.setFluorophoreWavelength(Double.parseDouble(fluorophoreWavelength.getText()));
            model.setFluorophoreTOn(Double.parseDouble(fluorophoreTOn.getText()));
            model.setFluorophoreTOff(Double.parseDouble(fluorophoreTOff.getText()));
            model.setFluorophoreTBl(Double.parseDouble(fluorophoreTBl.getText()));

            model.setLaserCurrentPower(Double.parseDouble(laserInitPower.getText()));
            model.setLaserMinPower(Double.parseDouble(laserMinPower.getText()));
            model.setLaserMaxPower(Double.parseDouble(laserMaxPower.getText()));
            
            model.setFiducialsNumber(Integer.parseInt(fiducialsNumber.getText()));
            model.setFiducialsSignal(Double.parseDouble(fiducialsSignal.getText()));
            
        } catch (NumberFormatException ex) {
            IJ.showMessage("Error in parsing of numerical values.");
            return;
        } catch (Exception ex) {
            IJ.showMessage("Error in device component intialization.");
            return;
        }
        
        String selectedEmitterButton = ButtonGroupUtils.getSelectedButtonText(this.emittersButtons);
        model.setEmittersCurrentSelection(selectedEmitterButton);
        model.setEmittersRandomNumber(Integer.parseInt(emittersRandomNumber.getText()));
        model.setEmittersGridSpacing(Integer.parseInt(emittersGridSpacing.getText()));
        model.setEmittersCsvFile(emittersCsvFile.toString());
        model.setEmittersRandomButtonText(emittersRandomButton.getText());
        model.setEmittersGridButtonText(emittersGridButton.getText());
        model.setEmittersCsvFileButtonText(emittersCsvButton.getText());
        model.setEmitters3DCheckBoxEnabled(emitters3DCheckBox.isSelected());
        model.setEmitters3DMinZ(Double.parseDouble(emitters3DMinZ.getText()));
        model.setEmitters3DMaxZ(Double.parseDouble(emitters3DMaxZ.getText()));
        
        String selectedBackgroundButton = ButtonGroupUtils.getSelectedButtonText(this.backgroundButtons);
        model.setBackgroundCurrentSelection(selectedBackgroundButton);
        model.setBackgroundUniformSignal(Float.parseFloat(backgroundUniformSignal.getText()));
        model.setBackgroundRandomFeatureSize(Double.parseDouble(backgroundRandomFeatureSize.getText()));
        model.setBackgroundRandomMinValue(Float.parseFloat(backgroundRandomMinValue.getText()));
        model.setBackgroundRandomMaxValue(Float.parseFloat(backgroundRandomMaxValue.getText()));
        model.setBackgroundRandomSeed(Integer.parseInt(backgroundRandomSeed.getText()));
        model.setBackgroundTifFile(backgroundTifFile.toString());
        model.setBackgroundUniformButtonText(backgroundUniformButton.getText());
        model.setBackgroundRandomButtonText(backgroundRandomButton.getText());
        model.setBackgroundTifFileButtonText(backgroundTifButton.getText());
        
        model.setPsfCurrentSelection(String.valueOf(psfComboBox.getSelectedItem()));
        model.setPsfGaussian2dText(psfGaussian2DCard.getName());
        model.setPsfGaussian3dText(psfGaussian3DCard.getName());
        model.setPsfGibsonLanniNumBasis(Integer.parseInt(glNumBasis.getText()));
        model.setPsfGibsonLanniNumSamples(Integer.parseInt(glNumSamples.getText()));
        model.setPsfGibsonLanniOversampling(Integer.parseInt(glOversampling.getText()));
        model.setPsfGibsonLanniSizeX(Integer.parseInt(glSizeX.getText()));
        model.setPsfGibsonLanniSizeY(Integer.parseInt(glSizeY.getText()));
        model.setPsfGibsonLanniNs(Double.parseDouble(glNs.getText()));
        model.setPsfGibsonLanniNg0(Double.parseDouble(glNg0.getText()));
        model.setPsfGibsonLanniNg(Double.parseDouble(glNg.getText()));
        model.setPsfGibsonLanniNi0(Double.parseDouble(glNi0.getText()));
        model.setPsfGibsonLanniNi(Double.parseDouble(glNi.getText()));
        model.setPsfGibsonLanniTi0(Double.parseDouble(glTi0.getText()));
        model.setPsfGibsonLanniTg0(Double.parseDouble(glTg0.getText()));
        model.setPsfGibsonLanniTg(Double.parseDouble(glTg.getText()));
        model.setPsfGibsonLanniResPsf(Double.parseDouble(glResPsf.getText()));
        model.setPsfGibsonLanniResPsfAxial(Double.parseDouble(glResPsfAxial.getText()));
        model.setPsfGibsonLanniSolver(glSolver.getText());
        model.setPsfGibsonLanniMaxRadius(Integer.parseInt(glMaxRadius.getText()));
        model.setPsfGibsonLanniText(psfGibsonLanniCard.getName());
    }
    
    /**
     * Updates the GUI with values from the microscope model.
     */
    private void updateView() {
        cameraSizeX.setText(String.valueOf(model.getCameraNX()));
        cameraSizeY.setText(String.valueOf(model.getCameraNY()));
        cameraReadoutNoise.setText(String.valueOf(model.getCameraReadoutNoise()));
        cameraDarkCurrent.setText(String.valueOf(model.getCameraDarkCurrent()));
        cameraQuantumEfficiency.setText(String.valueOf(model.getCameraQuantumEfficiency()));
        cameraAduPerElectron.setText(String.valueOf(model.getCameraAduPerElectron()));
        cameraEmGain.setText(String.valueOf(model.getCameraEmGain()));
        cameraBaseline.setText(String.valueOf(model.getCameraBaseline()));
        cameraPixelSize.setText(String.valueOf(model.getCameraPixelSize()));
        
        objectiveNa.setText(String.valueOf(model.getObjectiveNa()));
        objectiveMag.setText(String.valueOf(model.getObjectiveMag()));
        
        stageZ.setText(String.valueOf(model.getStageZ()));
        
        fluorophoreComboBox.setSelectedItem(model.getFluorophoreCurrentSelection());
        fluorophoreSignal.setText(String.valueOf(model.getFluorophoreSignal()));
        fluorophoreWavelength.setText(String.valueOf(model.getFluorophoreWavelength()));
        fluorophoreTOn.setText(String.valueOf(model.getFluorophoreTOn()));
        fluorophoreTOff.setText(String.valueOf(model.getFluorophoreTOff()));
        fluorophoreTBl.setText(String.valueOf(model.getFluorophoreTBl()));
        
        laserInitPower.setText(String.valueOf(model.getLaserCurrentPower()));
        laserMinPower.setText(String.valueOf(model.getLaserMinPower()));
        laserMaxPower.setText(String.valueOf(model.getLaserMaxPower()));
        
        fiducialsNumber.setText(String.valueOf(model.getFiducialsNumber()));
        fiducialsSignal.setText(String.valueOf(model.getFiducialsSignal()));
        
        emittersRandomNumber.setText(String.valueOf(model.getEmittersRandomNumber()));
        emittersGridSpacing.setText(String.valueOf(model.getEmittersGridSpacing()));
        emittersCsvFile = new File(model.getEmittersCsvFile());
        ButtonGroupUtils.selectButtonModelFromText(emittersButtons, model.getEmittersCurrentSelection());
        emitters3DCheckBox.setSelected(model.getEmitters3DCheckBoxEnabled());
        emitters3DMinZ.setText(String.valueOf(model.getEmitters3DMinZ()));
        emitters3DMaxZ.setText(String.valueOf(model.getEmitters3DMaxZ()));
        
        backgroundUniformSignal.setText(String.valueOf(model.getBackgroundUniformSignal()));
        backgroundRandomFeatureSize.setText(String.valueOf(model.getBackgroundRandomFeatureSize()));
        backgroundRandomMinValue.setText(String.valueOf(model.getBackgroundRandomMinValue()));
        backgroundRandomMaxValue.setText(String.valueOf(model.getBackgroundRandomMaxValue()));
        backgroundRandomSeed.setText(String.valueOf(model.getBackgroundRandomSeed()));
        backgroundTifFile = new File(model.getBackgroundTifFile());
        ButtonGroupUtils.selectButtonModelFromText(backgroundButtons, model.getBackgroundCurrentSelection());
        
        psfComboBox.setSelectedItem(model.getPsfCurrentSelection());
        glNumBasis.setText(String.valueOf(model.getPsfGibsonLanniNumBasis()));
        glNumSamples.setText(String.valueOf(model.getPsfGibsonLanniNumSamples()));
        glOversampling.setText(String.valueOf(model.getPsfGibsonLanniOversampling()));
        glSizeX.setText(String.valueOf(model.getPsfGibsonLanniSizeX()));
        glSizeY.setText(String.valueOf(model.getPsfGibsonLanniSizeY()));
        glNs.setText(String.valueOf(model.getPsfGibsonLanniNs()));
        glNg0.setText(String.valueOf(model.getPsfGibsonLanniNg0()));
        glNg.setText(String.valueOf(model.getPsfGibsonLanniNg()));
        glNi0.setText(String.valueOf(model.getPsfGibsonLanniNi0()));
        glNi.setText(String.valueOf(model.getPsfGibsonLanniNi()));
        glTi0.setText(String.valueOf(model.getPsfGibsonLanniTi0()));
        glTg0.setText(String.valueOf(model.getPsfGibsonLanniTg0()));
        glTg.setText(String.valueOf(model.getPsfGibsonLanniTg()));
        glResPsf.setText(String.valueOf(model.getPsfGibsonLanniResPsf()));
        glResPsfAxial.setText(String.valueOf(model.getPsfGibsonLanniResPsfAxial()));
        glSolver.setText(model.getPsfGibsonLanniSolver());
        glMaxRadius.setText(String.valueOf(model.getPsfGibsonLanniMaxRadius()));
        
    }
    
    private void initializeSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initializeSimulationActionPerformed

        updateModel();

        // Now that we have setup all the components, we assemble the
        // microscope and the simulator.
        Microscope microscope = model.build();

        // The simulation engine
        SimEngine generator = new SimEngine(microscope);

        double max_controller_output;
        int controller_tickrate;
        try {
            max_controller_output = Double.parseDouble(e_max_controller_output.getText());
            controller_tickrate = Integer.parseInt(e_controller_tickrate.getText());
        } catch (NumberFormatException ex) {
            IJ.showMessage("Error in parsing controller parameters.");
            return;
        }
        
        if (max_controller_output < 0.0 || controller_tickrate < 1) {
            IJ.showMessage("Error in controller parameter values.");
            return;
        }
        controller_factory.setMaxControllerOutput(max_controller_output);
        
        
        App app = new App(analyzer_factory.build(), generator, controller_factory.build(), controller_tickrate);
        main.setApp(app);
        this.dispose();
    }//GEN-LAST:event_initializeSimulationActionPerformed
    /**
     * Opens a SASS settings file and updates the GUI accordingly.
     */
    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        
        JFileChooser fc = new JFileChooser();
        int returnVal;
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        //set a default filename
        fc.setSelectedFile(new File("simulation.sass"));
        //Set an extension filter
        fc.setFileFilter(new FileNameExtensionFilter("SASS settings","sass"));
        returnVal = fc.showOpenDialog(null);
        if  (returnVal != JFileChooser.APPROVE_OPTION) {
            return;
        }
        
        FileInputStream fileIn = null;
        try {
            fileIn = new FileInputStream(fc.getSelectedFile());
            model = Model.read(fileIn);
            updateView();
        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            if (fileIn != null) {
                try {
                    fileIn.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_openButtonActionPerformed

    /**
     * Saves the GUI settings to a file.
     */
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        int returnVal;
        fc.setDialogType(JFileChooser.SAVE_DIALOG);
        //set a default filename
        fc.setSelectedFile(new File("simulation.sass"));
        //Set an extension filter
        fc.setFileFilter(new FileNameExtensionFilter("SASS settings","sass"));
        returnVal = fc.showSaveDialog(null);
        if  (returnVal != JFileChooser.APPROVE_OPTION) {
            return;
        }
        
        FileOutputStream fileOut = null;
        try {
            fileOut = new FileOutputStream(fc.getSelectedFile());
            updateModel();
            model.write(fileOut);
        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            if (fileOut != null) {
                try {
                    fileOut.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void emittersRandomButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_emittersRandomButtonStateChanged
        if (emittersRandomButton.isSelected()) {
            emittersRandomNumber.setEnabled(true);
        } else {
            emittersRandomNumber.setEnabled(false);
        }
    }//GEN-LAST:event_emittersRandomButtonStateChanged

    private void emittersGridButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_emittersGridButtonStateChanged
        if (emittersGridButton.isSelected()) {
            emittersGridSpacing.setEnabled(true);
        } else {
            emittersGridSpacing.setEnabled(false);
        }
    }//GEN-LAST:event_emittersGridButtonStateChanged

    private void emittersCsvButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_emittersCsvButtonStateChanged
        if (emittersCsvButton.isSelected()) {
            emittersChooseFile.setEnabled(true);
            emitters3DCheckBox.setSelected(false);
            emitters3DCheckBox.setEnabled(false);
        } else {
            emittersChooseFile.setEnabled(false);
            emitters3DCheckBox.setEnabled(true);
        }
    }//GEN-LAST:event_emittersCsvButtonStateChanged

    private void backgroundUniformButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_backgroundUniformButtonStateChanged
        if (backgroundUniformButton.isSelected()) {
            backgroundUniformSignal.setEnabled(true);
        } else {
            backgroundUniformSignal.setEnabled(false);
        }
        
    }//GEN-LAST:event_backgroundUniformButtonStateChanged

    private void backgroundTifButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_backgroundTifButtonStateChanged
        if (backgroundTifButton.isSelected()) {
            backgroundChooseFile.setEnabled(true);
        } else {
            backgroundChooseFile.setEnabled(false);
        }
    }//GEN-LAST:event_backgroundTifButtonStateChanged

    private void backgroundRandomButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_backgroundRandomButtonStateChanged
        if (backgroundRandomButton.isSelected()) {
            backgroundRandomFeatureSize.setEnabled(true);
            backgroundRandomMinValue.setEnabled(true);
            backgroundRandomMaxValue.setEnabled(true);
            backgroundRandomSeed.setEnabled(true);
        } else {
            backgroundRandomFeatureSize.setEnabled(false);
            backgroundRandomMinValue.setEnabled(false);
            backgroundRandomMaxValue.setEnabled(false);
            backgroundRandomSeed.setEnabled(false);
        }
    }//GEN-LAST:event_backgroundRandomButtonStateChanged

    private void psfComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_psfComboBoxItemStateChanged
        CardLayout cl = (CardLayout)(psfCardPanel.getLayout());
        cl.show(psfCardPanel, (String)evt.getItem());
    }//GEN-LAST:event_psfComboBoxItemStateChanged

    private void emitters3DCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_emitters3DCheckBoxItemStateChanged
        if (emitters3DCheckBox.isSelected()) {
            emitters3DMinZ.setEnabled(true);
            emitters3DMaxZ.setEnabled(true);
        } else {
            emitters3DMinZ.setEnabled(false);
            emitters3DMaxZ.setEnabled(false);
        }
    }//GEN-LAST:event_emitters3DCheckBoxItemStateChanged

    private void fluorophoreComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fluorophoreComboBoxItemStateChanged
        CardLayout cl = (CardLayout)(fluorophoreCardPanel.getLayout());
        cl.show(fluorophoreCardPanel, (String)evt.getItem());
    }//GEN-LAST:event_fluorophoreComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel FluorophoreParentPanel;
    private javax.swing.JPanel SimpleFluorophorePanel;
    private javax.swing.JPanel analyzer_panel;
    private javax.swing.ButtonGroup backgroundButtons;
    private javax.swing.JButton backgroundChooseFile;
    private javax.swing.JRadioButton backgroundRandomButton;
    private javax.swing.JTextField backgroundRandomFeatureSize;
    private javax.swing.JTextField backgroundRandomMaxValue;
    private javax.swing.JTextField backgroundRandomMinValue;
    private javax.swing.JTextField backgroundRandomSeed;
    private javax.swing.JRadioButton backgroundTifButton;
    private javax.swing.JRadioButton backgroundUniformButton;
    private javax.swing.JTextField backgroundUniformSignal;
    private javax.swing.JTextField cameraAduPerElectron;
    private javax.swing.JTextField cameraBaseline;
    private javax.swing.JTextField cameraDarkCurrent;
    private javax.swing.JTextField cameraEmGain;
    private javax.swing.JTextField cameraPixelSize;
    private javax.swing.JTextField cameraQuantumEfficiency;
    private javax.swing.JTextField cameraReadoutNoise;
    private javax.swing.JTextField cameraSizeX;
    private javax.swing.JTextField cameraSizeY;
    private javax.swing.JComboBox cb_analyzer_setup;
    private javax.swing.JComboBox cb_controller_setup;
    private javax.swing.JPanel controller_panel;
    private javax.swing.JTextField e_controller_tickrate;
    private javax.swing.JTextField e_max_controller_output;
    private javax.swing.JCheckBox emitters3DCheckBox;
    private javax.swing.JTextField emitters3DMaxZ;
    private javax.swing.JTextField emitters3DMinZ;
    private javax.swing.ButtonGroup emittersButtons;
    private javax.swing.JButton emittersChooseFile;
    private javax.swing.JRadioButton emittersCsvButton;
    private javax.swing.JRadioButton emittersGridButton;
    private javax.swing.JTextField emittersGridSpacing;
    private javax.swing.JRadioButton emittersRandomButton;
    private javax.swing.JTextField emittersRandomNumber;
    private javax.swing.JTextField fiducialsNumber;
    private javax.swing.JTextField fiducialsSignal;
    private javax.swing.JPanel fluorophoreCardPanel;
    private javax.swing.JComboBox<String> fluorophoreComboBox;
    private javax.swing.JSeparator fluorophoreSeparator;
    private javax.swing.JTextField fluorophoreSignal;
    private javax.swing.JTextField fluorophoreTBl;
    private javax.swing.JTextField fluorophoreTOff;
    private javax.swing.JTextField fluorophoreTOn;
    private javax.swing.JTextField fluorophoreWavelength;
    private javax.swing.JTextField glMaxRadius;
    private javax.swing.JTextField glNg;
    private javax.swing.JTextField glNg0;
    private javax.swing.JTextField glNi;
    private javax.swing.JTextField glNi0;
    private javax.swing.JTextField glNs;
    private javax.swing.JTextField glNumBasis;
    private javax.swing.JTextField glNumSamples;
    private javax.swing.JTextField glOversampling;
    private javax.swing.JTextField glResPsf;
    private javax.swing.JTextField glResPsfAxial;
    private javax.swing.JTextField glSizeX;
    private javax.swing.JTextField glSizeY;
    private javax.swing.JTextField glSolver;
    private javax.swing.JTextField glTg;
    private javax.swing.JTextField glTg0;
    private javax.swing.JTextField glTi0;
    private javax.swing.JButton initializeSimulation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField laserInitPower;
    private javax.swing.JTextField laserMaxPower;
    private javax.swing.JTextField laserMinPower;
    private javax.swing.JTextField objectiveMag;
    private javax.swing.JTextField objectiveNa;
    private javax.swing.JButton openButton;
    private java.awt.Panel panel6;
    private javax.swing.JPanel psfCardPanel;
    private javax.swing.JComboBox<String> psfComboBox;
    private javax.swing.JPanel psfGaussian2DCard;
    private javax.swing.JLabel psfGaussian2DLabel;
    private javax.swing.JPanel psfGaussian3DCard;
    private javax.swing.JLabel psfGaussian3DLabel;
    private javax.swing.JScrollPane psfGibsonLanniCard;
    private javax.swing.JPanel psfGibsonLanniPanel;
    private javax.swing.JPanel psfParentPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JScrollPane simpleFluorophoreCard;
    private javax.swing.JTextField stageZ;
    // End of variables declaration//GEN-END:variables

}
